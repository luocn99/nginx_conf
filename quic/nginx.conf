master_process off;
daemon off;
worker_processes  1;  ## Default: 1
error_log  logs/error.log debug;
pid        logs/nginx.pid;
worker_rlimit_nofile 8192;

events {
  worker_connections  2400;  ## Default: 1024
}

http {
  index    index.html index.htm index.php;

  log_format   main '$remote_addr - $remote_user [$time_local]  $status '
    '"$request" $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log   logs/access.log  main;
  sendfile     on;
  tcp_nopush   on;
  server_names_hash_bucket_size 128; # this seems to be required for some vhosts

  server { # php/fastcgi
    listen       8080;
    server_name  domain1.com www.domain1.com;
    access_log   logs/domain1.access.log  main;
    root         html;

    location / {
		root         html;
#return 209;
    }
  }

  server { # simple load balancing
	listen         127.0.0.1:8081 ssl;
#listen         127.0.0.1:8081;
	proxy_buffering off;
    server_name     big.server.com;
	ssl_certificate ./cert/helloworlds.cert;
	ssl_certificate_key ./cert/helloworlds.key;
    location / {
#		return 201;
		proxy_pass http://127.0.0.1:8080;
    }
  }

  server { # simple load balancing
	listen         127.0.0.1:8081 quic;
#listen         127.0.0.1:8081;
	proxy_buffering off;
    server_name     big.server.com;
	ssl_certificate ./cert/helloworlds.cert;
	ssl_certificate_key ./cert/helloworlds.key;
    location / {
#		return 201;
		proxy_pass http://127.0.0.1:8080;
    }
  }
  server { # simple load balancing
	listen         127.0.0.1:8084 quic;
#listen         127.0.0.1:8081;
    server_name     big.server.com;
	ssl_certificate ./cert/helloworlds.cert;
	ssl_certificate_key ./cert/helloworlds.key;

    location / {
#		return 201;
		proxy_pass http://127.0.0.1:8080;
    }
  }
  server { # simple load balancing
	listen         127.0.0.1:8085 quic;
#listen         127.0.0.1:8081;
    server_name     big.server.com;
	ssl_certificate ./cert/helloworlds.cert;
	ssl_certificate_key ./cert/helloworlds.key;

    location / {
#		return 201;
		proxy_pass http://127.0.0.1:808;
    }
  }
  server { # simple load balancing
	listen         127.0.0.1:8082;
#listen          8082 quic;
    server_name     big.server.com;
    access_log      logs/big.server.access.log main;

    location / {
#proxy_pass http://127.0.0.1:8080;
		proxy_pass http://www.baidu.com;
    }
  }

  server { # simple reverse-proxy
    listen       8442  quic;
    server_name  domain2.com www.domain2.com;
    access_log   logs/domain2.access.log  main;
	ssl on;
	ssl_protocols TLSv1.2;
	ssl_certificate ./cert/helloworlds.cert;
	ssl_certificate_key ./cert/helloworlds.key;
proxy_buffering off;
    # serve static files
    location ~ ^/(images|javascript|js|css|flash|media|static)/  {
      root    /var/www/virtual/big.server.com/htdocs;
      expires 30d;
    }

    # pass requests for dynamic content to rails/turbogears/zope, et al
    location / {
      proxy_pass      http://127.0.0.1:8080;
    }
    location /502 {
      proxy_pass      http://127.0.0.1:502;
    }
  }

  upstream big_server_com {
    server 127.0.0.3:8000 weight=5;
    server 127.0.0.3:8001 weight=5;
    server 192.168.0.1:8000;
    server 192.168.0.1:8001;
  }



}
stream {
    upstream backend {
        hash $remote_addr consistent;

        server 127.0.0.1:12345            max_fails=3 fail_timeout=30s;
        server unix:/tmp/backend3;
    }

    upstream dns {
       server 192.168.0.1:53535;
    }

    server {
        listen 127.0.0.1:8443 udp;
        proxy_responses 1;
        proxy_timeout 20s;
        proxy_pass dns;
    }
}
